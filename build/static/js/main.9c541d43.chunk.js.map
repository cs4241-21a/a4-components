{"version":3,"sources":["AddUser.js","EditRow.js","App.js","index.js"],"names":["AddUser","props","state","username","score","event","preventDefault","this","setState","target","id","value","fetch","method","body","JSON","stringify","then","x","json","handler","className","action","type","placeholder","onChange","handleChange","bind","onClick","submitUser","React","Component","EditRow","name","updateParent","rank","date","finishEdit","removeRow","App","editing","values","provideUpdate","elements","Object","entries","sort","a","map","index","hasOwnProperty","beginEditing","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c541d43.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass AddUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            score: \"\",\r\n        };\r\n    }\r\n\r\n    handleChange(event) {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.id]: event.target.value,\r\n        });\r\n\r\n        return false;\r\n    }\r\n\r\n    submitUser(event) {\r\n        event.preventDefault();\r\n\r\n        fetch('/api/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state)\r\n        })\r\n            .then(x => x.json())\r\n            .then(this.props.handler);\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>Add Score</h2>\r\n                <br/>\r\n                <form action=\"\">\r\n                    <input type=\"text\"\r\n                           id=\"username\"\r\n                           placeholder=\"username\"\r\n                           value={this.state.username}\r\n                           onChange={this.handleChange.bind(this)}/>\r\n                    <input type=\"text\"\r\n                           id=\"score\"\r\n                           placeholder=\"score\"\r\n                           value={this.state.score}\r\n                           onChange={this.handleChange.bind(this)}/>\r\n                    <button id=\"addUser\" onClick={this.submitUser.bind(this)}>submit</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AddUser;","import React from \"react\";\r\n\r\nclass EditRow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: this.props.username,\r\n            score: this.props.score,\r\n        };\r\n    }\r\n\r\n    handleChange(event) {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n\r\n        return false;\r\n    }\r\n\r\n    finishEdit(event) {\r\n        event.preventDefault();\r\n\r\n        fetch('/api/edit', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                ...this.state,\r\n                id: this.props.name\r\n            }),\r\n        })\r\n            .then(x => x.json())\r\n            .then(this.props.updateParent);\r\n        return false;\r\n    }\r\n\r\n    removeRow(event) {\r\n        event.preventDefault();\r\n        fetch('/api/remove', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                id: this.props.name\r\n            })\r\n        })\r\n            .then(x => x.json())\r\n            .then(this.props.updateParent);\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.rank}</td>\r\n                <td>\r\n                    <input name=\"username\"\r\n                           value={this.state.username}\r\n                           onChange={this.handleChange.bind(this)}/>\r\n                </td>\r\n                <td>\r\n                    <input name=\"score\"\r\n                           value={this.state.score}\r\n                           onChange={this.handleChange.bind(this)}/>\r\n                </td>\r\n                <td>{this.props.date}</td>\r\n                <td>\r\n                    <button type=\"button\"\r\n                            onClick={this.finishEdit.bind(this)}>Save\r\n                    </button>\r\n                    <button type=\"button\"\r\n                            onClick={this.removeRow.bind(this)}>Remove\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default EditRow;","import React from \"react\";\r\nimport AddUser from \"./AddUser\";\r\nimport EditRow from \"./EditRow\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editing: null,\r\n            values: {}\r\n        };\r\n        fetch('/api/values', {method: 'GET'})\r\n            .then(x => x.json())\r\n            .then(this.provideUpdate.bind(this));\r\n    }\r\n\r\n    provideUpdate(state) {\r\n        this.setState({\r\n            editing: null,\r\n            values: state\r\n        });\r\n    }\r\n\r\n    beginEditing(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            editing: event.target.name,\r\n            values: this.state.values\r\n        });\r\n        return false;\r\n    }\r\n\r\n    removeRow(event) {\r\n        event.preventDefault();\r\n        fetch('/api/remove', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                id: event.target.name\r\n            })\r\n        })\r\n            .then(x => x.json())\r\n            .then(this.provideUpdate);\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const elements = Object.entries(this.state.values)\r\n            .sort(([, a], [, b]) => b.score - a.score)\r\n            .map(([id, x], index) => {\r\n                if (this.state.hasOwnProperty(\"editing\") && this.state.editing === id) {\r\n                    return (<EditRow name={id}\r\n                                     username={x.username}\r\n                                     score={x.score}\r\n                                     rank={index + 1}\r\n                                     date={x.date}\r\n                                     updateParent={this.provideUpdate.bind(this)}/>);\r\n                } else {\r\n                    return (<tr>\r\n                        <td>{index + 1}</td>\r\n                        <td>{x.username}</td>\r\n                        <td>{x.score}</td>\r\n                        <td>{x.date}</td>\r\n                        <td>\r\n                            <button type=\"button\"\r\n                                    name={id}\r\n                                    onClick={this.beginEditing.bind(this)}>Edit\r\n                            </button>\r\n                            <button type=\"button\"\r\n                                    name={id}\r\n                                    onClick={this.removeRow.bind(this)}>Remove\r\n                            </button>\r\n                        </td>\r\n                    </tr>);\r\n                }\r\n            });\r\n\r\n        return (\r\n            <div>\r\n                <h1>User Leaderboard</h1>\r\n                <AddUser handler={this.provideUpdate.bind(this)}/>\r\n                <table id=\"leaderboard\">\r\n                    <tr>\r\n                        <th>Ranking</th>\r\n                        <th>Username</th>\r\n                        <th>Score</th>\r\n                        <th>Date</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                    <tbody>{elements}</tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}