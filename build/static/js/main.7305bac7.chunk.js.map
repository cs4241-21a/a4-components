{"version":3,"sources":["context/LoginReducer.js","context/LoginContextProvider.jsx","components/Navbar.jsx","components/GithubOAuth.jsx","pages/LoginPage.jsx","pages/RegisterPage.jsx","components/TODOListItem.jsx","pages/TODOListPage.jsx","pages/ErrorPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["LoginReducer","state","action","type","localStorage","setItem","JSON","stringify","token","payload","LoginContext","createContext","initialState","getItem","parse","LoginContextProvider","children","useReducer","dispatch","contextValues","login","logout","Provider","value","Navbar","user","history","useHistory","useContext","className","aria-label","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","username","href","style","backgroundColor","border","onClick","fetch","method","credentials","then","response","a","json","loggedOut","push","GithubOAuth","cursor","LoginPage","useState","formData","password","errors","setState","useEffect","jwt_decode","onInputChange","name","onSubmit","headers","body","data","status","catch","err","alert","e","preventDefault","htmlFor","placeholder","onChange","target","required","RegisterPage","confirmPassword","useCallback","console","log","userId","defaultValue","TODOListItem","task","i","editTask","delTask","title","description","min","max","priority","dateCreated","readOnly","deadline","_id","TODOListPage","useParams","tasks","getTasks","map","Object","assign","loggedIn","index","parseInt","document","querySelector","valueAsNumber","oldTitle","newTitle","error","submit","today","Date","dateString","String","getMonth","padStart","getDate","getFullYear","step","ErrorPage","errorCode","errorMessage","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+OAeeA,EAfM,SAACC,EAAOC,GACzB,OAAQA,EAAOC,MACX,IAAK,QAED,OADAC,aAAaC,QAAQ,QAASC,KAAKC,UAAU,CAAEC,MAAON,EAAOO,WACtD,2BAAKR,GAAZ,IAAmBO,MAAON,EAAOO,UAErC,IAAK,SAED,OADAL,aAAaC,QAAQ,QAASC,KAAKC,UAAU,OACtC,2BAAKN,GAAZ,IAAmBO,MAAO,S,OCLzBE,EAAeC,0BAMtBC,EAHmBR,aAAaS,QAAQ,SAC1CP,KAAKQ,MAAMV,aAAaS,QAAQ,UAAY,CAAEL,MAAO,MAuB1CO,EAnBc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAEjBC,qBAAWjB,EAAcY,GAFR,mBAEpCX,EAFoC,KAE7BiB,EAF6B,KAMrCC,EAAa,2BACZlB,GADY,IAEfmB,MALU,SAACX,GAAD,OAAcS,EAAS,CAAEf,KAAM,QAASM,aAMlDY,OALW,kBAAMH,EAAS,CAAEf,KAAM,cAQtC,OACI,cAACO,EAAaY,SAAd,CAAuBC,MAAOJ,EAA9B,SACKH,KC+CEQ,EAnEA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACRC,EAAUC,cACRN,EAAWO,qBAAWlB,GAAtBW,OAgBR,OACI,qBAAKQ,UAAU,8CAA8CC,aAAW,SAAxE,SACI,sBAAKD,UAAU,kBAAf,UAEI,wBAAQA,UAAU,iBAAiB1B,KAAK,SAAS4B,iBAAe,WAAWC,iBAAe,WACtFC,gBAAc,UAAUC,gBAAc,QAAQJ,aAAW,oBAD7D,SAEI,sBAAMD,UAAU,0BAGpB,qBAAKA,UAAU,2BAA2BM,GAAG,YAKzCV,GACA,qBAAKI,UAAU,UAAf,SACI,uBAAMA,UAAU,cAAhB,mBAAqCJ,EAAKW,SAA1C,SAIR,qBAAKP,UAAU,UAAf,SACI,qBAAIA,UAAU,qBAAd,WAESJ,GACD,qCACI,oBAAII,UAAU,WAAd,SACI,mBAAGA,UAAU,WAAWQ,KAAK,YAA7B,wBAEJ,oBAAIR,UAAU,WAAd,SACI,mBAAGA,UAAU,WAAWQ,KAAK,SAA7B,wBAKRZ,GACA,oBAAII,UAAU,WAAd,SACI,wBAAQA,UAAU,WAClBS,MAAO,CAAEC,gBAAiB,cAAeC,OAAQ,mBAAqBC,QAlDjF,WACbC,MAAM,cAAe,CACjBC,OAAQ,MACRC,YAAa,YACdC,KAHH,uCAGQ,WAAOC,GAAP,SAAAC,EAAA,sEACeD,EAASE,OADxB,cAEKC,YACL5B,IACAK,EAAQwB,KAAK,WAJb,2CAHR,wDAgDwB,iCC9CjBC,EAXK,WAEhB,OACI,oBAAGtB,UAAU,+DAAb,UACI,mBAAGA,UAAU,kCACb,mBAAGS,MAAO,CAAEc,OAAQ,WAAaf,KAAK,mBAClCR,UAAU,iBADd,mCCyHGwB,EAxHG,WACd,IAAM3B,EAAUC,cADI,EAEKC,qBAAWlB,GAA5BF,EAFY,EAEZA,MAAOY,EAFK,EAELA,MAFK,EAIMkC,mBAAS,CAC/BC,SAAU,CAAEnB,SAAU,GAAIoB,SAAU,IACpCC,OAAQ,CAAErB,SAAU,KAAMoB,SAAU,QANpB,mBAIbvD,EAJa,KAINyD,EAJM,KAUpBC,qBAAU,WACFnD,GACAkB,EAAQwB,KAAR,gBAAsBU,YAAWpD,GAAO2B,OAE7C,CAAC3B,EAAOkB,IAGX,IAAMmC,EAAgB,SAACC,EAAMvC,GACzBmC,EAAS,2BACFzD,GADC,IAEJsD,SAAS,2BACFtD,EAAMsD,UADL,kBAEHO,EAAOvC,QAMdwC,EAAW,WACbrB,MAAM,aAAc,CAChBC,OAAQ,OACRqB,QAAS,CACL,eAAgB,oBAEpBC,KAAM3D,KAAKC,UAAU,CACjB6B,SAAUnC,EAAMsD,SAASnB,SACzBoB,SAAUvD,EAAMsD,SAASC,aAE9BX,KATH,uCASQ,WAAgBC,GAAhB,eAAAC,EAAA,sEACeD,EAASE,OADxB,YACEkB,EADF,QAIKT,OAJL,uBAKAC,EAAS,2BACFzD,GADC,IAEJwD,OAAO,2BACAxD,EAAMwD,QACNS,EAAKT,WAThB,0BAgBAS,EAAKC,QAA0B,YAAhBD,EAAKC,SACpB/C,EAAM8C,EAAK1D,OACXkB,EAAQwB,KAAR,gBAAsBgB,EAAK/B,MAlB3B,2CATR,uDA6BGiC,OAAM,SAACC,GACNC,MAAM,4BAId,OACI,qCACI,cAAC,EAAD,CAAQ7C,KAAMjB,GAASoD,YAAWpD,KAClC,qBAAKqB,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,iCAAf,SACI,sBAAKA,UAAU,qCAAf,UACI,oBAAIA,UAAU,cAAd,mBACA,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,gCAAf,SAEI,sBAAMkC,SAAU,SAACQ,GACbA,EAAEC,iBACFT,KAFJ,SAII,sBAAKlC,UAAU,aAAf,UACI,uBAAOA,UAAU,kBAAkB4C,QAAQ,WAA3C,wBACA,uBAAO5C,UAAU,eACb6C,YAAY,sBAAsBZ,KAAK,WAAW3D,KAAK,OACvDoB,MAAOtB,EAAMsD,SAASnB,SAAUuC,SAAU,SAACJ,GACvCV,EAAc,WAAYU,EAAEK,OAAOrD,QACpCsD,UAAQ,IAEX5E,EAAMwD,OAAOrB,UACb,mBAAGP,UAAU,oBAAb,SAAkC5B,EAAMwD,OAAOrB,WAGnD,uBAAOP,UAAU,kBAAkB4C,QAAQ,WAA3C,wBACA,uBAAO5C,UAAU,eAAe6C,YAAY,WAAWZ,KAAK,WAAW3D,KAAK,WACxEwE,SAAU,SAACJ,GACPV,EAAc,WAAYU,EAAEK,OAAOrD,QACpCsD,UAAQ,IAEX5E,EAAMwD,OAAOD,UACb,mBAAG3B,UAAU,oBAAb,SAAkC5B,EAAMwD,OAAOD,WAGnD,wBAAQ3B,UAAU,uBAAuB1B,KAAK,SAAS4D,SAAU,SAACQ,GAC9DA,EAAEC,iBACFT,KAFJ,oBAIA,cAAC,EAAD,IACA,oBAAGlC,UAAU,oDAAb,mCACI,mBAAGQ,KAAK,YAAYR,UAAU,YAA9B,oDC4BjCiD,EAtIM,WACjB,IAAMpD,EAAUC,cADO,EAEEC,qBAAWlB,GAA5BF,EAFe,EAEfA,MAAOY,EAFQ,EAERA,MAFQ,EAGGkC,mBAAS,CAC/BC,SAAU,CACNnB,SAAU,GACVoB,SAAU,GACVuB,gBAAiB,IAErBtB,OAAQ,CACJrB,SAAU,KACVoB,SAAU,QAXK,mBAGhBvD,EAHgB,KAGTyD,EAHS,KAgBvBC,qBAAU,WACFnD,GACAkB,EAAQwB,KAAR,gBAAsBU,YAAWpD,GAAO2B,QAKhD,IAAM0B,EAAgBmB,uBAAY,SAAClB,EAAMvC,GACrCmC,EAAS,2BACFzD,GADC,IAEJsD,SAAS,2BACFtD,EAAMsD,UADL,kBAEHO,EAAOvC,SAGjB,CAACtB,EAAOyD,IAELK,EAAWiB,uBAAY,SAACT,GAC1BA,EAAEC,iBACFS,QAAQC,IAAI,4BAEZxC,MAAM,gBAAiB,CACnBC,OAAQ,OACRqB,QAAS,CACL,eAAgB,oBAEpBC,KAAM3D,KAAKC,UAAU,CACjB6B,SAAUnC,EAAMsD,SAASnB,SACzBoB,SAAUvD,EAAMsD,SAASC,SACzBuB,gBAAiB9E,EAAMsD,SAASwB,oBAGnClC,KAXL,uCAWU,WAAgBC,GAAhB,eAAAC,EAAA,sEACiBD,EAASE,OAD1B,WACIkB,EADJ,QAGOC,QAA0B,YAAhBD,EAAKC,SACpB/C,EAAM8C,EAAK1D,OACXkB,EAAQwB,KAAR,gBAAsBgB,EAAKiB,WAG3BjB,EAAKT,OARP,uBASEC,EAAS,2BACFzD,GADC,IAEJwD,OAAO,2BACAxD,EAAMwD,QACNS,EAAKT,WAblB,8DAXV,yDA8BD,CAACxD,EAAOyB,EAASN,IAEpB,OACI,qCACI,cAAC,EAAD,IACA,qBAAKS,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,iCAAf,SACI,sBAAKA,UAAU,qCAAf,UACI,oBAAIA,UAAU,cAAd,sBACA,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,sBAAf,SAEI,sBAAMkC,SAAUA,EAAhB,SACI,sBAAKlC,UAAU,aAAf,UAEI,uBAAOA,UAAU,kBAAkB4C,QAAQ,WAA3C,wBACA,uBAAO5C,UAAU,eAAe6C,YAAY,sBAAsBZ,KAAK,WAAW3D,KAAK,OACnFwE,SAAU,SAACJ,GACPV,EAAc,WAAYU,EAAEK,OAAOrD,QAEvCsD,UAAQ,EACRO,aAAcnF,EAAMsD,SAAWtD,EAAMsD,SAASnB,SAAW,KAEzDnC,EAAMwD,QAAUxD,EAAMwD,OAAOrB,UAC7B,mBAAGP,UAAU,oBAAb,SAAkC5B,EAAMwD,OAAOrB,WAGnD,uBAAOP,UAAU,kBAAkB4C,QAAQ,WAA3C,wBACA,uBAAO5C,UAAU,eACb6C,YAAY,WAAWZ,KAAK,WAAW3D,KAAK,WAC5CwE,SAAU,SAACJ,GACPV,EAAc,WAAYU,EAAEK,OAAOrD,QAEvCsD,UAAQ,IAEZ,uBAAOhD,UAAU,kBAAkB4C,QAAQ,WAA3C,gCACA,uBAAO5C,UAAU,eACb6C,YAAY,mBAAmBZ,KAAK,kBAAkB3D,KAAK,WAC3DwE,SAAU,SAACJ,GACPV,EAAc,kBAAmBU,EAAEK,OAAOrD,QAE9CsD,UAAQ,IAER5E,EAAMwD,QAAUxD,EAAMwD,OAAOD,UAC7B,mBAAG3B,UAAU,oBAAb,SAAkC5B,EAAMwD,OAAOD,WAGnD,wBAAQ3B,UAAU,uBAAuB1B,KAAK,SAAS4D,SAAUA,EAAjE,sBAEA,cAAC,EAAD,IAEA,oBAAGlC,UAAU,gDAAb,qCACI,mBAAGQ,KAAK,SAASR,UAAU,YAA3B,mDC5FjCwD,EAlCM,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,EAAGC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACvC,OACI,+BACI,+BACI,uBAAO5D,UAAU,WAAW4C,QAAO,gBAAWc,GAAKzD,aAAW,qBAC9D,uBAAOD,UAAU,eAAeM,GAAE,gBAAWoD,GAAKpF,KAAK,OAAOiF,aAAcE,EAAKI,WAErF,+BACI,uBAAO7D,UAAU,WAAW4C,QAAO,sBAAiBc,GAAKzD,aAAW,2BACpE,uBAAOD,UAAU,eAAeM,GAAE,sBAAiBoD,GAAKpF,KAAK,OAAOiF,aAAcE,EAAKK,iBAE3F,+BACI,uBAAO9D,UAAU,WAAW4C,QAAO,mBAAcc,GAAKzD,aAAW,wBACjE,uBAAOD,UAAU,eAAe1B,KAAK,SAASgC,GAAE,mBAAcoD,GAAKK,IAAI,IAAIC,IAAI,KAAKT,aAAcE,EAAKQ,cAE3G,+BACI,uBAAOjE,UAAU,WAAW4C,QAAO,sBAAiBc,GAAKzD,aAAW,sBACpE,uBAAOD,UAAU,eAAeM,GAAE,sBAAiBoD,GAAKpF,KAAK,OAAOoB,MAAO+D,EAAKS,YAAaC,UAAQ,OAEzG,+BACI,uBAAOnE,UAAU,WAAW4C,QAAO,mBAAcc,GAAKzD,aAAW,kBACjE,uBAAOD,UAAU,eAAeM,GAAE,mBAAcoD,GAAKpF,KAAK,OAAOoB,MAAO+D,EAAKW,SAAUD,UAAQ,OAEnG,6BACI,sBAAKnE,UAAU,YAAf,UACI,wBAAQY,QAAS,SAAC8B,GAAQiB,EAASD,EAAGD,EAAKI,QAAU7D,UAAU,kBAA/D,wBAEA,wBAAQY,QAAS,SAAC8B,GAAQkB,EAAQH,EAAKI,QAAU7D,UAAU,iBAA3D,2BAzBHyD,EAAKY,MCsQPC,EAlQM,WACjB,IAAMzE,EAAUC,cACRwD,EAAWiB,cAAXjB,OAFe,EAGG7B,mBAAS,CAAE+C,MAAO,KAHrB,mBAGhBpG,EAHgB,KAGTyD,EAHS,OAIE9B,qBAAWlB,GAA5BF,EAJe,EAIfA,MAAOY,EAJQ,EAIRA,MAGTkF,EAAWtB,uBAAY,kBAAMtC,MAAM,SAAD,OAAUyC,GAAU,CACxDxC,OAAQ,OACRqB,QAAS,CACL,eAAgB,oBAEpBC,KAAM3D,KAAKC,UAAU,CACjBC,MAAOA,MAEZqC,KARgC,uCAQ3B,WAAOC,GAAP,eAAAC,EAAA,sEACeD,EAASE,OADxB,WACEkB,EADF,QAGKT,SAAWS,EAAKT,OAAOrC,OAAS8C,EAAKT,OAAOhC,OACjDC,EAAQwB,KAAK,WACbgB,EAAKT,OALL,uBAMAwB,QAAQC,IAAIhB,EAAKT,QACjBa,MAAM,oBAPN,0BAWJZ,EAAS,CACL2C,MAAOnC,EAAKqC,KAAI,SAAAhC,GAAC,OAAIiC,OAAOC,OAAO,GAAIlC,QAZvC,2CAR2B,uDAsBhCH,OAAM,SAACC,GACNC,MAAM,sBACNW,QAAQC,IAAIb,QACZ,CAAC7D,EAAOkB,EAASyD,IAGrBxB,qBAAU,WAEN,IAAKnD,EAAO,CACR,IAAIkG,GAAW,EA2Bf,GAzBAhE,MAAM,mBAAoB,CACtBC,OAAQ,OACRC,YAAa,YACdC,KAHH,uCAGQ,WAAOC,GAAP,eAAAC,EAAA,sEACeD,EAASE,OADxB,UACEkB,EADF,OAGJe,QAAQC,IAAIhB,IACRA,EAAKT,OAJL,uBAKA/B,EAAQwB,KAAK,UACb+B,QAAQC,IAAI,kBANZ,0BAWAhB,EAAK1D,QACLY,EAAM8C,EAAK1D,OACXkG,GAAW,GAbX,2CAHR,uDAmBGtC,OAAM,WACL1C,EAAQwB,KAAK,UACb+B,QAAQC,IAAI,sBAIXwB,EAAU,OAGnBhE,MAAM,eAAgB,CAClBC,OAAQ,OACRqB,QAAS,CACL,eAAgB,oBAEpBC,KAAM3D,KAAKC,UAAU,CACjB4B,GAAIgD,MAETtC,KARH,uCAQQ,WAAOC,GAAP,eAAAC,EAAA,sEACeD,EAASE,OADxB,UACEkB,EADF,OAEJe,QAAQC,IAAIhB,IAERA,EAAKT,OAJL,uBAKA/B,EAAQwB,KAAR,gBAAsBU,YAAWpD,GAAO2B,KALxC,0BASJmE,IATI,2CARR,yDAoBD,CAAC9F,EAAO2E,EAAQmB,EAAU5E,EAASN,IAGtC,IAAMoE,EAAQ,uCAAG,WAAOD,EAAGG,GAAV,iBAAA3C,EAAA,yDAEP4D,EAAQC,SAASrB,OACjBO,EAAWe,SAASC,cAAT,oBAAoCH,KAGtCI,eAA4C,IAA3BjB,EAASiB,eAAwBjB,EAASiB,cAAgB,GAAKjB,EAASiB,cAAgB,IAN3G,uBAOTzC,MAAM,2BAPG,0BAYb5B,MAAM,SAAD,OAAUyC,EAAV,SAAyB,CAC1BxC,OAAQ,OACRqB,QAAS,CACL,eAAgB,oBAEpBC,KAAM3D,KAAKC,UAAU,CACjByG,SAAUtB,EACVuB,SAAUJ,SAASC,cAAT,iBAAiCH,IAASpF,MACpDoE,YAAakB,SAASC,cAAT,uBAAuCH,IAASpF,MAC7DuE,SAAUA,EAASiB,cACnBvG,MAAOA,MAEZqC,KAZH,uCAYQ,WAAOqB,GAAP,eAAAnB,EAAA,sEACgBmB,EAAKlB,OADrB,YACEqD,EADF,QAGMa,MAHN,uBAIA5C,MAAM+B,EAAMa,OAJZ,0BAQJxD,EAAS,CACL2C,MAAOA,EAAME,KAAI,SAAAhC,GAAC,OAAIiC,OAAOC,OAAO,GAAIlC,QATxC,2CAZR,uDAuBGH,OAAM,SAACC,GACNY,QAAQC,IAAIb,MApCH,2CAAH,wDAyCRoB,EAAO,uCAAG,WAAOC,GAAP,SAAA3C,EAAA,sDAEZL,MAAM,SAAD,OAAUyC,EAAV,WAA2B,CAC5BxC,OAAQ,OACRqB,QAAS,CACL,eAAgB,oBAEpBC,KAAM3D,KAAKC,UAAU,CAAEmF,QAAOlF,MAAOA,MACtCqC,KANH,uCAMQ,WAAOqB,GAAP,eAAAnB,EAAA,sEACgBmB,EAAKlB,OADrB,OACEqD,EADF,OAGJ3C,EAAS,CACL2C,MAAOA,EAAME,KAAI,SAAAhC,GAAC,OAAIiC,OAAOC,OAAO,GAAIlC,QAJxC,2CANR,uDAYGH,OAAM,SAACC,GACNY,QAAQC,IAAIb,MAfJ,2CAAH,sDAoBP8C,EAAM,uCAAG,WAAgB5C,GAAhB,2BAAAxB,EAAA,yDAEXwB,EAAEC,iBAGE4C,EAAQ,IAAIC,KACVC,EAAa,UAAGC,OAAOH,EAAMI,WAAa,GAAGC,SAAS,EAAG,KAA5C,eACZF,OAAOH,EAAMM,WAAWD,SAAS,EAAG,KADxB,YACgCL,EAAMO,eAEnDjC,EAAQmB,SAASC,cAAc,UAC/BnB,EAAckB,SAASC,cAAc,oBAErChB,EAAWe,SAASC,cAAc,oBACzBC,eAA4C,IAA3BjB,EAASiB,eAAwBjB,EAASiB,cAAgB,GAAKjB,EAASiB,cAAgB,IAb7G,uBAcPzC,MAAM,2BAdC,iCAmBLtB,EAAO,CACT0C,MAAOA,EAAMnE,MACboE,YAAaA,EAAYpE,MACzBwE,YAAauB,EACbxB,SAAUA,EAASiB,cACnBvG,MAAOA,GAELyD,EAAO3D,KAAKC,UAAUyC,GAG5BN,MAAM,SAAD,OAAUyC,EAAV,WAA2B,CAC5BxC,OAAQ,OACRqB,QAAS,CACL,eAAgB,oBAEpBC,SAECpB,KAPL,uCAOU,WAAgBC,GAAhB,eAAAC,EAAA,sEACkBD,EAASE,OAD3B,YACIqD,EADJ,QAGQa,MAHR,uBAIE5C,MAAM+B,EAAMa,OAJd,0BAQFxD,EAAS,CACL2C,MAAOA,EAAME,KAAI,SAAAhC,GAAC,OAAIiC,OAAOC,OAAO,GAAIlC,QAT1C,2CAPV,uDA7BW,mBAiDJ,GAjDI,4CAAH,sDAqDZ,OACI,gCACI,cAAC,EAAD,CAAQ9C,KAAMjB,GAASoD,YAAWpD,KAClC,sBAAKqB,UAAU,YAAf,UACI,oBAAIA,UAAU,YAAd,uBACA,mBAAGA,UAAU,OAAb,sWASA,sBAAKA,UAAU,MAAf,UACI,oBAAIA,UAAU,KAAd,mBACA,wBAAOA,UAAU,kCAAjB,UACI,uBAAOA,UAAU,aAAjB,SACI,+BACI,4CACA,6CACA,0CACA,8CACA,0CAEA,4BAGR,uBAAOM,GAAG,cAAV,SAEQlC,EAAMoG,OAASpG,EAAMoG,MAAME,KAAI,SAACjB,EAAMC,GAAP,OAC3B,cAAC,EAAD,CAAcD,KAAMA,EAAMC,EAAGA,EAAGC,SAAUA,EAAUC,QAASA,eAOjF,uBAAM5D,UAAU,oDAAhB,UACI,oBAAIA,UAAU,KAAd,wBACA,uBAAO4C,QAAQ,QAAQ5C,UAAU,kBAAjC,oBACA,uBAAOA,UAAU,eAAe1B,KAAK,OAAO2D,KAAK,QAAQ3B,GAAG,QAAQuC,YAAY,QAAQG,UAAQ,IAChG,uBAAOJ,QAAQ,cAAc5C,UAAU,kBAAvC,oCACA,uBAAOA,UAAU,eAAe1B,KAAK,OAAO2D,KAAK,cAAc3B,GAAG,cAAcuC,YAAY,gBAC5F,uBAAOD,QAAQ,iBAAiB5C,UAAU,kBAA1C,gCACA,uBAAOM,GAAG,iBAAiBhC,KAAK,QAAQ0B,UAAU,aAAa+D,IAAI,IAAIC,IAAI,KAAK+B,KAAK,IAAIxC,aAAa,MACtG,wBAAQjD,GAAG,cAAcN,UAAU,8BAA8BY,QAAS0E,EAA1E,8BCvPLU,EATG,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC5B,OACI,qCACI,6BAAKD,IACL,4BAAIC,QCgBDC,MAhBf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9E,IACjC,cAAC,IAAD,CAAO6E,KAAK,SAASC,UAAW9E,IAChC,cAAC,IAAD,CAAO6E,KAAK,YAAYC,UAAWrD,IACnC,cAAC,IAAD,CAAOoD,KAAK,iBAAiBC,UAAWhC,IACxC,cAAC,IAAD,CAAO+B,KAAK,IAAZ,SACE,cAAC,EAAD,CAAWJ,UAAW,gBAAiBC,aAAc,yDCJhDK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzF,MAAK,YAAkD,IAA/C0F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJjC,SAASkC,eAAe,SAM1BX,M","file":"static/js/main.7305bac7.chunk.js","sourcesContent":["const LoginReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            localStorage.setItem('login', JSON.stringify({ token: action.payload }));\r\n            return { ...state, token: action.payload };\r\n            \r\n        case 'LOGOUT':\r\n            localStorage.setItem('login', JSON.stringify(null));\r\n            return { ...state, token: null };\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport default LoginReducer;","import React, { createContext, useReducer } from 'react';\r\nimport LoginReducer from './LoginReducer';\r\n\r\nexport const LoginContext = createContext();\r\n\r\n// get initial cart state from local mem\r\nconst loginFromStorage = localStorage.getItem('login') ?\r\n    JSON.parse(localStorage.getItem('login')) : { token: null };\r\n\r\nconst initialState = loginFromStorage ;\r\n\r\nconst LoginContextProvider = ({ children }) => {\r\n    // state=state, dispatch=reducer\r\n    const [state, dispatch] = useReducer(LoginReducer, initialState);\r\n    const login = (payload) =>  dispatch({ type: 'LOGIN', payload }); ;\r\n    const logout = () => dispatch({ type: 'LOGOUT' });\r\n\r\n    const contextValues = {\r\n        ...state,\r\n        login,\r\n        logout,\r\n    }\r\n\r\n    return (\r\n        <LoginContext.Provider value={contextValues}>\r\n            {children}\r\n        </LoginContext.Provider>\r\n    )\r\n}\r\n\r\nexport default LoginContextProvider;","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { LoginContext } from \"../context/LoginContextProvider\";\r\n\r\nconst Navbar = ({ user }) => {\r\n    const history = useHistory();\r\n    const { logout } = useContext(LoginContext);\r\n\r\n    // Navbar logout callback\r\n    const onLogout = () => {\r\n        fetch('/api/logout', {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        }).then(async (response) => {\r\n            const data = await response.json();\r\n            if (data.loggedOut) {\r\n                logout();\r\n                history.push('/login');\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\" aria-label=\"Navbar\">\r\n            <div className=\"container-fluid\">\r\n\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbars\"\r\n                    aria-controls=\"navbars\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbars\">\r\n                </div>\r\n                {/* Right navbar */}\r\n\r\n                {\r\n                    user &&\r\n                    <div className=\"ms-auto\">\r\n                        <span className=\"navbar-text\">Hello {user.username}!</span>\r\n                    </div>\r\n                }\r\n\r\n                <div className=\"ms-auto\">\r\n                    <ul className=\"navbar-nav ms-auto\">\r\n                        {\r\n                            !user &&\r\n                            <>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" href=\"/register\">Register</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" href=\"/login\">Login</a>\r\n                                </li>\r\n                            </>\r\n                        }\r\n                        {\r\n                            user &&\r\n                            <li className=\"nav-item\">\r\n                                <button className=\"nav-link\" \r\n                                style={{ backgroundColor: 'transparent', border: '0px solid black' }} onClick={onLogout}>\r\n                                    Logout\r\n                                </button>\r\n                            </li>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nconst GithubOAuth = () => {\r\n\r\n    return (\r\n        <p className=\"bg-dark rounded rounded-5 mt-3 p-2 d-flex align-items-center\">\r\n            <i className=\"fa fa-github text-light fa-3x\"></i>\r\n            <a style={{ cursor: 'pointer' }} href='/api/auth/github'\r\n                className=\"link-info ms-3\">Login with Github</a>\r\n        </p>\r\n    );\r\n};\r\n\r\nexport default GithubOAuth;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nimport Navbar from \"../components/Navbar\";\r\nimport GithubOAuth from \"../components/GithubOAuth\";\r\nimport { LoginContext } from \"../context/LoginContextProvider\";\r\n\r\nconst LoginPage = () => {\r\n    const history = useHistory();\r\n    const { token, login } = useContext(LoginContext);\r\n\r\n    const [state, setState] = useState({\r\n        formData: { username: '', password: '' },\r\n        errors: { username: null, password: null }\r\n    });\r\n\r\n    // Redirect to todolist page if logged in\r\n    useEffect(() => {\r\n        if (token) {\r\n            history.push(`/user/${jwt_decode(token).id}`);\r\n        }\r\n    }, [token, history]);\r\n\r\n    // Set state on input field change\r\n    const onInputChange = (name, value) => {\r\n        setState({\r\n            ...state,\r\n            formData: {\r\n                ...state.formData,\r\n                [name]: value\r\n            }\r\n        });\r\n    };\r\n\r\n    // Do api call on login form submission\r\n    const onSubmit = () => {\r\n        fetch(`/api/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: state.formData.username,\r\n                password: state.formData.password\r\n            })\r\n        }).then(async function (response) {\r\n            const data = await response.json();\r\n\r\n            // Set any errors with user input\r\n            if (data.errors) {\r\n                setState({\r\n                    ...state,\r\n                    errors: {\r\n                        ...state.errors,\r\n                        ...data.errors\r\n                    }\r\n                });\r\n                return;\r\n            }\r\n\r\n            // Redirect to todo list page on login\r\n            if (data.status && data.status === 'success') {\r\n                login(data.token);\r\n                history.push(`/user/${data.id}`)\r\n            }\r\n        }).catch((err) => {\r\n            alert('Login Request failed');\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar user={token && jwt_decode(token)} />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12 offset-md-2 col-md-8\">\r\n                        <div className=\"p-5 mb-4 bg-light rounded-3 border\">\r\n                            <h2 className=\"text-center\">Login</h2>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-12 col-md-12 col-xs-12\">\r\n                                    {/* Login form */}\r\n                                    <form onSubmit={(e) => {\r\n                                        e.preventDefault();\r\n                                        onSubmit();\r\n                                    }}>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"small mb-1 mt-3\" htmlFor=\"username\">Username: </label>\r\n                                            <input className=\"form-control\"\r\n                                                placeholder=\"Enter Your Username\" name=\"username\" type=\"text\"\r\n                                                value={state.formData.username} onChange={(e) => {\r\n                                                    onInputChange('username', e.target.value);\r\n                                                }} required />\r\n                                            {\r\n                                                state.errors.username &&\r\n                                                <p className=\"small text-danger\">{state.errors.username}</p>\r\n                                            }\r\n\r\n                                            <label className=\"small mb-1 mt-3\" htmlFor=\"password\">Password: </label>\r\n                                            <input className=\"form-control\" placeholder=\"Password\" name=\"password\" type=\"password\"\r\n                                                onChange={(e) => {\r\n                                                    onInputChange('password', e.target.value);\r\n                                                }} required />\r\n                                            {\r\n                                                state.errors.password &&\r\n                                                <p className=\"small text-danger\">{state.errors.password}</p>\r\n                                            }\r\n\r\n                                            <button className=\"mt-3 btn btn-primary\" type=\"submit\" onSubmit={(e) => {\r\n                                                e.preventDefault();\r\n                                                onSubmit();\r\n                                            }}>Log in</button>\r\n                                            <GithubOAuth />\r\n                                            <p className=\"m=0 bg-dark text-light p-2 my-1 rounded rounded-5\">Don't have an account?\r\n                                                <a href=\"/register\" className=\"link-info\"> Sign up here</a>\r\n                                            </p>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginPage;","import React, { useEffect, useContext, useState, useCallback } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport Navbar from '../components/Navbar';\r\nimport GithubOAuth from \"../components/GithubOAuth\";\r\nimport { LoginContext } from \"../context/LoginContextProvider\";\r\n\r\nconst RegisterPage = () => {\r\n    const history = useHistory();\r\n    const { token, login } = useContext(LoginContext);\r\n    const [state, setState] = useState({\r\n        formData: {\r\n            username: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        },\r\n        errors: {\r\n            username: null,\r\n            password: null\r\n        }\r\n    });\r\n\r\n    // Redirect to todolist page if user already logged in\r\n    useEffect(() => {\r\n        if (token) {\r\n            history.push(`/user/${jwt_decode(token).id}`);\r\n        }\r\n    });\r\n\r\n    // Change state when user types in a text box\r\n    const onInputChange = useCallback((name, value) => {\r\n        setState({\r\n            ...state,\r\n            formData: {\r\n                ...state.formData,\r\n                [name]: value\r\n            }\r\n        });\r\n    }, [state, setState]);\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        console.log('Register form submission');\r\n\r\n        fetch(`/api/register`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: state.formData.username,\r\n                password: state.formData.password,\r\n                confirmPassword: state.formData.confirmPassword\r\n            })\r\n        })\r\n            .then(async function (response) {\r\n                const data = await response.json();\r\n\r\n                if (data.status && data.status === 'success') {\r\n                    login(data.token);\r\n                    history.push(`/user/${data.userId}`);\r\n                }\r\n\r\n                if (data.errors) {\r\n                    setState({\r\n                        ...state,\r\n                        errors: {\r\n                            ...state.errors,\r\n                            ...data.errors\r\n                        }\r\n                    });\r\n                    return;\r\n                }\r\n            });\r\n    }, [state, history, login]);\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12 offset-md-2 col-md-8\">\r\n                        <div className=\"p-5 mb-4 bg-light rounded-3 border\">\r\n                            <h2 className=\"text-center\">Register</h2>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-12 col-md-12\">\r\n                                    {/* <!-- Register form --> */}\r\n                                    <form onSubmit={onSubmit}>\r\n                                        <div className=\"form-group\">\r\n\r\n                                            <label className=\"small mb-1 mt-3\" htmlFor=\"username\">Username: </label>\r\n                                            <input className=\"form-control\" placeholder=\"Enter Your Username\" name=\"username\" type=\"text\"\r\n                                                onChange={(e) => {\r\n                                                    onInputChange('username', e.target.value);\r\n                                                }}\r\n                                                required\r\n                                                defaultValue={state.formData ? state.formData.username : ''} />\r\n                                            {\r\n                                                state.errors && state.errors.username &&\r\n                                                <p className=\"small text-danger\">{state.errors.username}</p>\r\n                                            }\r\n\r\n                                            <label className=\"small mb-1 mt-3\" htmlFor=\"password\">Password: </label>\r\n                                            <input className=\"form-control\"\r\n                                                placeholder=\"Password\" name=\"password\" type=\"password\"\r\n                                                onChange={(e) => {\r\n                                                    onInputChange('password', e.target.value);\r\n                                                }}\r\n                                                required />\r\n\r\n                                            <label className=\"small mb-1 mt-3\" htmlFor=\"password\">Confirm Password: </label>\r\n                                            <input className=\"form-control\"\r\n                                                placeholder=\"Confirm Password\" name=\"confirmPassword\" type=\"password\"\r\n                                                onChange={(e) => {\r\n                                                    onInputChange('confirmPassword', e.target.value);\r\n                                                }}\r\n                                                required />\r\n                                            {\r\n                                                state.errors && state.errors.password &&\r\n                                                <p className=\"small text-danger\">{state.errors.password}</p>\r\n                                            }\r\n\r\n                                            <button className=\"mt-3 btn btn-primary\" type=\"submit\" onSubmit={onSubmit}>Register</button>\r\n\r\n                                            <GithubOAuth />\r\n\r\n                                            <p className=\"bg-dark text-light p-2 my-2 rounded rounded-5\" >Already have an account?\r\n                                                <a href=\"/login\" className=\"link-info\"> Log in here</a>\r\n                                            </p>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RegisterPage;","import React from \"react\";\r\n\r\nconst TODOListItem = ({ task, i, editTask, delTask }) => {\r\n    return (\r\n        <tr key={task._id}>\r\n            <td>\r\n                <label className=\"d-inline\" htmlFor={`title-${i}`} aria-label=\"Task Title Input\"></label>\r\n                <input className='form-control' id={`title-${i}`} type=\"text\" defaultValue={task.title} />\r\n            </td>\r\n            <td>\r\n                <label className=\"d-inline\" htmlFor={`description-${i}`} aria-label=\"Task Description Input\"></label>\r\n                <input className='form-control' id={`description-${i}`} type=\"text\" defaultValue={task.description} />\r\n            </td>\r\n            <td>\r\n                <label className=\"d-inline\" htmlFor={`priority-${i}`} aria-label=\"Task Priority Input\"></label>\r\n                <input className='form-control' type=\"number\" id={`priority-${i}`} min=\"0\" max=\"10\" defaultValue={task.priority} />\r\n            </td>\r\n            <td>\r\n                <label className=\"d-inline\" htmlFor={`dateCreated-${i}`} aria-label=\"Task Date Created\"></label>\r\n                <input className='form-control' id={`dateCreated-${i}`} type=\"text\" value={task.dateCreated} readOnly />\r\n            </td>\r\n            <td>\r\n                <label className=\"d-inline\" htmlFor={`deadline-${i}`} aria-label=\"Task Deadline\"></label>\r\n                <input className='form-control' id={`deadline-${i}`} type=\"text\" value={task.deadline} readOnly />\r\n            </td>\r\n            <td>\r\n                <div className=\"btn-group\">\r\n                    <button onClick={(e) => { editTask(i, task.title) }} className=\"btn btn-warning\">Save\r\n                        Edits</button>\r\n                    <button onClick={(e) => { delTask(task.title) }} className=\"btn btn-danger\">Delete</button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default TODOListItem;","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nimport Navbar from '../components/Navbar';\r\nimport { LoginContext } from \"../context/LoginContextProvider\";\r\nimport TODOListItem from \"../components/TODOListItem\";\r\n\r\nconst TODOListPage = () => {\r\n    const history = useHistory();\r\n    const { userId } = useParams();\r\n    const [state, setState] = useState({ tasks: [] });\r\n    const { token, login } = useContext(LoginContext);\r\n\r\n    // Get all user tasks from the server\r\n    const getTasks = useCallback(() => fetch(`/user/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n            token: token\r\n        })\r\n    }).then(async (response) => {\r\n        const data = await response.json();\r\n\r\n        if (data.errors && (data.errors.login || data.errors.user))\r\n            history.push('/login');\r\n        if (data.errors) {\r\n            console.log(data.errors)\r\n            alert('An error occured');\r\n            return;\r\n        }\r\n\r\n        setState({\r\n            tasks: data.map(e => Object.assign({}, e))\r\n        });\r\n    }).catch((err) => {\r\n        alert('Cannot fetch tasks');\r\n        console.log(err);\r\n    }), [token, history, userId]);\r\n\r\n    // Get all user tasks from the server\r\n    useEffect(() => {\r\n\r\n        if (!token) {\r\n            let loggedIn = false;\r\n\r\n            fetch('/user/check-auth', {\r\n                method: 'POST',\r\n                credentials: 'include'\r\n            }).then(async (response) => {\r\n                const data = await response.json();\r\n\r\n                console.log(data);\r\n                if (data.errors) {\r\n                    history.push('/login');\r\n                    console.log('push to login1');\r\n                    return;\r\n                }\r\n\r\n\r\n                if (data.token) {\r\n                    login(data.token);\r\n                    loggedIn = true;\r\n                }\r\n\r\n            }).catch(() => {\r\n                history.push('/login');\r\n                console.log('push to login2');\r\n                return;\r\n            });\r\n\r\n            if (!loggedIn) return;\r\n        }\r\n\r\n        fetch(`/user/exists`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                id: userId\r\n            })\r\n        }).then(async (response) => {\r\n            const data = await response.json();\r\n            console.log(data);\r\n\r\n            if (data.errors) {\r\n                history.push(`/user/${jwt_decode(token).id}`);\r\n                return;\r\n            }\r\n\r\n            getTasks();\r\n        })\r\n\r\n    }, [token, userId, getTasks, history, login]);\r\n\r\n    // Callback to edit a task\r\n    const editTask = async (i, title) => {\r\n\r\n        const index = parseInt(i);\r\n        const priority = document.querySelector(`#priority-${index}`);\r\n\r\n        // Verify priority input is ok\r\n        if ((!priority.valueAsNumber && priority.valueAsNumber !== 0) || priority.valueAsNumber < 0 || priority.valueAsNumber > 10) {\r\n            alert('Priority must be 0 - 10');\r\n            return;\r\n        }\r\n\r\n        // Send request to server\r\n        fetch(`/user/${userId}/edit`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                oldTitle: title,\r\n                newTitle: document.querySelector(`#title-${index}`).value,\r\n                description: document.querySelector(`#description-${index}`).value,\r\n                priority: priority.valueAsNumber,\r\n                token: token\r\n            })\r\n        }).then(async (data) => {\r\n            const tasks = await data.json();\r\n\r\n            if (tasks.error) {\r\n                alert(tasks.error);\r\n                return;\r\n            }\r\n\r\n            setState({\r\n                tasks: tasks.map(e => Object.assign({}, e))\r\n            });\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    // Callback to delete a task\r\n    const delTask = async (title) => {\r\n\r\n        fetch(`/user/${userId}/delete`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ title, token: token })\r\n        }).then(async (data) => {\r\n            const tasks = await data.json();\r\n\r\n            setState({\r\n                tasks: tasks.map(e => Object.assign({}, e))\r\n            });\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    // Add task submit callback\r\n    const submit = async function (e) {\r\n        // prevent default form action from being carried out\r\n        e.preventDefault();\r\n\r\n        // Get and format today's date\r\n        var today = new Date();\r\n        const dateString = `${String(today.getMonth() + 1).padStart(2, '0')}/` +\r\n            `${String(today.getDate()).padStart(2, '0')}/${today.getFullYear()}`;\r\n\r\n        const title = document.querySelector('#title');\r\n        const description = document.querySelector('#description');\r\n\r\n        const priority = document.querySelector('#priority-range');\r\n        if ((!priority.valueAsNumber && priority.valueAsNumber !== 0) || priority.valueAsNumber < 0 || priority.valueAsNumber > 10) {\r\n            alert('Priority must be 0 - 10');\r\n            return;\r\n        }\r\n\r\n        // Compile Data\r\n        const json = {\r\n            title: title.value,\r\n            description: description.value,\r\n            dateCreated: dateString,\r\n            priority: priority.valueAsNumber,\r\n            token: token\r\n        };\r\n        const body = JSON.stringify(json);\r\n\r\n        // Send data\r\n        fetch(`/user/${userId}/submit`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body\r\n        })\r\n            .then(async function (response) {\r\n                const tasks = await response.json();\r\n\r\n                if (tasks.error) {\r\n                    alert(tasks.error);\r\n                    return;\r\n                }\r\n\r\n                setState({\r\n                    tasks: tasks.map(e => Object.assign({}, e))\r\n                });\r\n            });\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Navbar user={token && jwt_decode(token)} />\r\n            <div className=\"container\">\r\n                <h1 className=\"display-1\">TODO List</h1>\r\n                <p className=\"lead\">\r\n                    Add tasks to a TODO list. All task titles must be\r\n                    unique. The priority of each task must be 0 - 10\r\n                    where a higher number means a higher priority.\r\n                    You can edit tasks but they must be done one at a time.\r\n                    Deadlines for each task are auto-generated by the\r\n                    server based on the priority. Tasks are sorted in the\r\n                    table by priority in descending order.\r\n                </p>\r\n                <div className=\"row\">\r\n                    <h2 className=\"h2\">Tasks</h2>\r\n                    <table className=\"table table-striped table-hover\">\r\n                        <thead className=\"table-dark\">\r\n                            <tr>\r\n                                <th>Task Title</th>\r\n                                <th>Description</th>\r\n                                <th>Priority</th>\r\n                                <th>Date Created</th>\r\n                                <th>Deadline</th>\r\n                                {/* <!-- Col Holds buttons, Intentionally empty --> */}\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody id=\"task-holder\">\r\n                            {\r\n                                state.tasks && state.tasks.map((task, i) => (\r\n                                    <TODOListItem task={task} i={i} editTask={editTask} delTask={delTask} />\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <form className=\"border border-dark border-3 rounded rounded-5 p-3\">\r\n                    <h3 className=\"h3\">Add a Task</h3>\r\n                    <label htmlFor=\"title\" className=\"form-label mt-3\">Title:</label>\r\n                    <input className='form-control' type='text' name='title' id='title' placeholder=\"title\" required />\r\n                    <label htmlFor=\"description\" className=\"form-label mt-3\">Description(optional):</label>\r\n                    <input className='form-control' type=\"text\" name=\"description\" id=\"description\" placeholder=\"description\" />\r\n                    <label htmlFor=\"priority-range\" className=\"form-label mt-3\">Priority (0 - 10):</label>\r\n                    <input id='priority-range' type=\"range\" className=\"form-range\" min=\"0\" max=\"10\" step=\"1\" defaultValue='5' />\r\n                    <button id=\"addTask-btn\" className=\"btn btn-primary btn-lg mt-3\" onClick={submit}>Submit</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TODOListPage;","import React from \"react\";\r\n\r\n// Basic error page.\r\nconst ErrorPage = ({ errorCode, errorMessage }) => {\r\n    return (\r\n        <>\r\n            <h1>{errorCode}</h1>\r\n            <p>{errorMessage}</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;","import { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport TODOListPage from './pages/TODOListPage';\nimport ErrorPage from './pages/ErrorPage';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/' component={LoginPage} />\n        <Route path='/login' component={LoginPage} />\n        <Route path='/register' component={RegisterPage} />\n        <Route path='/user/:userId/' component={TODOListPage} />\n        <Route path='*'>\n          <ErrorPage errorCode={'404 Not Found'} errorMessage={'The page you are looking for does not exist.'} />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport LoginContextProvider from './context/LoginContextProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <LoginContextProvider>\n      <App />\n    </LoginContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}